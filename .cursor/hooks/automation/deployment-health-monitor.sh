#!/bin/bash
# Monitor deployment status, error rates, and performance metrics, sending notifications for failed deployments or performance degradation. Tracks Vercel deployment health, monitors build success/failure rates, and provides alerts for deployment issues. Setup: Export 'export VERCEL_TOKEN=your_token' and 'export VERCEL_PROJECT_ID=your_project_id' (get from vercel.com/account/tokens and Vercel dashboard).

bash -c 'input=$(cat); COMMAND=$(echo "$input" | jq -r ".tool_input.command // empty"); SUCCESS=$(echo "$input" | jq -r ".tool_response.success // false"); if [[ "$COMMAND" =~ (vercel|deploy|build) ]] && [ -n "$VERCEL_TOKEN" ] && [ -n "$VERCEL_PROJECT_ID" ]; then echo "üè• Deployment Health Monitor: Checking deployment status..."; DEPLOY_DATA=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" "https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&limit=5" 2>/dev/null); if [ -n "$DEPLOY_DATA" ] && [ "$DEPLOY_DATA" != "null" ]; then RECENT_DEPLOYMENTS=$(echo "$DEPLOY_DATA" | jq -r ".deployments[]"); TOTAL_DEPLOYMENTS=$(echo "$DEPLOY_DATA" | jq ".deployments | length"); SUCCESS_COUNT=0; ERROR_COUNT=0; BUILDING_COUNT=0; echo "üìä Recent deployment analysis ($TOTAL_DEPLOYMENTS deployments):"; echo "$DEPLOY_DATA" | jq -r ".deployments[] | \"State: \(.state) | Created: \(.created | todateiso8601) | URL: \(.url // \"N/A\")\""; for state in $(echo "$DEPLOY_DATA" | jq -r ".deployments[].state"); do case "$state" in READY) ((SUCCESS_COUNT++));; ERROR|CANCELED) ((ERROR_COUNT++));; BUILDING|QUEUED) ((BUILDING_COUNT++));; esac; done; SUCCESS_RATE=$(( SUCCESS_COUNT * 100 / TOTAL_DEPLOYMENTS )); echo "" ; echo "üìà Deployment Health Summary:"; echo "‚úÖ Successful: $SUCCESS_COUNT/$TOTAL_DEPLOYMENTS ($SUCCESS_RATE%)"; echo "‚ùå Failed: $ERROR_COUNT/$TOTAL_DEPLOYMENTS"; echo "üîÑ In Progress: $BUILDING_COUNT/$TOTAL_DEPLOYMENTS"; if [ $ERROR_COUNT -gt 0 ]; then echo "" >&2; echo "üö® DEPLOYMENT HEALTH ALERT!" >&2; echo "Recent failures detected: $ERROR_COUNT failed deployments" >&2; echo "Success rate: $SUCCESS_RATE%" >&2; echo "" >&2; echo "üîç Failed deployments:" >&2; echo "$DEPLOY_DATA" | jq -r ".deployments[] | select(.state == \"ERROR\" or .state == \"CANCELED\") | \"‚ùå \(.created | todateiso8601): \(.url // \"No URL\")\"" >&2; echo "" >&2; echo "üí° Troubleshooting steps:" >&2; echo "‚Ä¢ Check Vercel dashboard for detailed error logs" >&2; echo "‚Ä¢ Review recent code changes" >&2; echo "‚Ä¢ Verify environment variables are set" >&2; echo "‚Ä¢ Check for build script errors" >&2; if [ $SUCCESS_RATE -lt 50 ]; then echo "üö® CRITICAL: Success rate below 50%!" >&2; exit 2; fi; elif [ $SUCCESS_RATE -lt 80 ]; then echo "‚ö†Ô∏è Warning: Success rate below 80%"; fi; if [ $BUILDING_COUNT -gt 2 ]; then echo "‚è≥ Multiple builds in progress ($BUILDING_COUNT)"; echo "üí° This might indicate build queue issues"; fi; LATEST_DEPLOY=$(echo "$DEPLOY_DATA" | jq -r ".deployments[0]"); LATEST_STATE=$(echo "$LATEST_DEPLOY" | jq -r ".state"); LATEST_URL=$(echo "$LATEST_DEPLOY" | jq -r ".url // empty"); LATEST_CREATED=$(echo "$LATEST_DEPLOY" | jq -r ".created"); if [ -n "$LATEST_CREATED" ] && [ "$LATEST_CREATED" != "null" ]; then MINUTES_AGO=$(( ($(date +%s) - $LATEST_CREATED/1000) / 60 )); echo "üïí Latest deployment: $LATEST_STATE ($MINUTES_AGO minutes ago)"; if [ -n "$LATEST_URL" ]; then echo "üåê URL: https://$LATEST_URL"; fi; fi; echo "‚úÖ Deployment health check completed"; else echo "‚ùå Unable to fetch deployment data from Vercel API"; fi; else echo "‚ÑπÔ∏è Deployment health monitoring skipped (not a deployment command or missing tokens)"; fi'
